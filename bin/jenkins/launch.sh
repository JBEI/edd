#!/bin/bash -xe

# $1 = image tag generated by Jenkins
# $2 = project name given to docker-compose
TAG="${1}"
PROJECT="${2}"

# Copy default example settings to a config
cat settings/example | docker config create "${PROJECT}_settings" -

# Copy HMAC key for ICE to a config
# NOTE: this *should* be a secret instead of config;
# but, secrets can only appear at /run/secrets/${NAME}
# doing this as config is *only* because this is a transient test
cat secrets/edd_ice_key | docker config create "${PROJECT}_ice_key" -

# Rewrite docker-compose.override.yml to:
# 1. insert correct image tag, pointing to registry image
# 2. remove volume mounts from edd-core containers
# 3. add reference for settings config to edd-core containers
# 4. add reference for HMAC config to ice container
# 5. remove service definitions for nginx
yq w -s - -i docker-compose.override.yml <<EOF
- command: update
  path: services.http.image
  value: "jenkins.jbei.org:5000/jbei/edd-core:${TAG}"
- command: update
  path: services.websocket.image
  value: "jenkins.jbei.org:5000/jbei/edd-core:${TAG}"
- command: update
  path: services.worker.image
  value: "jenkins.jbei.org:5000/jbei/edd-core:${TAG}"
- command: delete
  path: services.http.volumes
- command: delete
  path: services.websocket.volumes
- command: delete
  path: services.worker.volumes
- command: update
  path: "configs.${PROJECT}_settings.external"
  value: true
- command: update
  path: services.http.configs
  value:
  - source: "${PROJECT}_settings"
    target: "/etc/edd/__init__.py"
- command: update
  path: services.websocket.configs
  value:
  - source: "${PROJECT}_settings"
    target: "/etc/edd/__init__.py"
- command: update
  path: services.worker.configs
  value:
  - source: "${PROJECT}_settings"
    target: "/etc/edd/__init__.py"
- command: update
  path: "configs.${PROJECT}_ice_key.external"
  value: true
- command: update
  path: services.ice.configs
  value:
  - source: "${PROJECT}_ice_key"
    target: "/usr/local/tomcat/data/rest-auth/edd"
- command: delete
  path: services.nginx
- command: delete
  path: services.nginx-gen
EOF

## define the stack
docker-compose config > stack.yml
## launch the stack with stack deploy
docker stack deploy --with-registry-auth -c stack.yml "${PROJECT}"

# wait for ice to finish coming up
# name ${PROJECT}_ice matches both ICE and its database
# but the database doesn't currently run a healthcheck
until [ -n "$(docker ps -q -f "name=${PROJECT}_ice" -f "health=healthy")" ]; do
    echo "Waiting on ICE"
    sleep 10
done

# correct the default DATA_DIRECTORY
# correct the default BLAST_INSTALL_DIR
SQL=$(cat <<'EOM'
UPDATE configuration
SET value = '/usr/local/tomcat/data'
WHERE key = 'DATA_DIRECTORY';
UPDATE configuration
SET value = '/usr/bin'
WHERE key = 'BLAST_INSTALL_DIR';
EOM
)
CONTAINER="$(docker ps -q -f "name=${PROJECT}_ice_db")"
docker exec "${CONTAINER}" psql -U iceuser -c "${SQL}" ice

# restart ICE so database config change in database applies
docker service update --force "${PROJECT}_ice"

# wait for http service to report healthy
until [ -n "$(docker ps -q -f "name=${PROJECT}_http" -f "health=healthy")" ]; do
    echo "Waiting for http service to report healthy"
    sleep 10
done
